# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2023, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-12-15 01:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../Doc/library/asyncio-api-index.rst:6
msgid "High-level API Index"
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:8
msgid "This page lists all high-level async/await enabled asyncio APIs."
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:12
msgid "Tasks"
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:14
msgid ""
"Utilities to run asyncio programs, create Tasks, and await on multiple "
"things with timeouts."
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:21
msgid ":func:`run`"
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:22
msgid "Create event loop, run a coroutine, close the loop."
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:24
msgid ":class:`Runner`"
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:25
msgid "A context manager that simplifies multiple async function calls."
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:27
msgid ":class:`Task`"
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:28
msgid "Task object."
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:30
msgid ":class:`TaskGroup`"
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:31
msgid ""
"A context manager that holds a group of tasks. Provides a convenient and "
"reliable way to wait for all tasks in the group to finish."
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:35
msgid ":func:`create_task`"
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:36
msgid "Start an asyncio Task, then returns it."
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:38
msgid ":func:`current_task`"
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:39
msgid "Return the current Task."
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:41
msgid ":func:`all_tasks`"
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:42
msgid "Return all tasks that are not yet finished for an event loop."
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:44
msgid "``await`` :func:`sleep`"
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:45
msgid "Sleep for a number of seconds."
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:47
msgid "``await`` :func:`gather`"
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:48
msgid "Schedule and wait for things concurrently."
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:50
msgid "``await`` :func:`wait_for`"
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:51
msgid "Run with a timeout."
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:53
msgid "``await`` :func:`shield`"
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:54
msgid "Shield from cancellation."
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:56
msgid "``await`` :func:`wait`"
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:57
msgid "Monitor for completion."
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:59
msgid ":func:`timeout`"
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:60
msgid "Run with a timeout. Useful in cases when ``wait_for`` is not suitable."
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:62
msgid ":func:`to_thread`"
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:63
msgid "Asynchronously run a function in a separate OS thread."
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:65
msgid ":func:`run_coroutine_threadsafe`"
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:66
msgid "Schedule a coroutine from another OS thread."
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:68
msgid "``for in`` :func:`as_completed`"
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:69
msgid "Monitor for completion with a ``for`` loop."
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:73
#: ../Doc/library/asyncio-api-index.rst:109
#: ../Doc/library/asyncio-api-index.rst:133
#: ../Doc/library/asyncio-api-index.rst:169
#: ../Doc/library/asyncio-api-index.rst:205
#: ../Doc/library/asyncio-api-index.rst:230
msgid "Examples"
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:74
msgid ""
":ref:`Using asyncio.gather() to run things in parallel "
"<asyncio_example_gather>`."
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:77
msgid ""
":ref:`Using asyncio.wait_for() to enforce a timeout "
"<asyncio_example_waitfor>`."
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:80
msgid ":ref:`Cancellation <asyncio_example_task_cancel>`."
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:82
msgid ":ref:`Using asyncio.sleep() <asyncio_example_sleep>`."
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:84
msgid "See also the main :ref:`Tasks documentation page <coroutine>`."
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:88
msgid "Queues"
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:90
msgid ""
"Queues should be used to distribute work amongst multiple asyncio Tasks, "
"implement connection pools, and pub/sub patterns."
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:98
msgid ":class:`Queue`"
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:99
msgid "A FIFO queue."
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:101
msgid ":class:`PriorityQueue`"
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:102
msgid "A priority queue."
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:104
msgid ":class:`LifoQueue`"
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:105
msgid "A LIFO queue."
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:110
msgid ""
":ref:`Using asyncio.Queue to distribute workload between several Tasks "
"<asyncio_example_queue_dist>`."
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:113
msgid "See also the :ref:`Queues documentation page <asyncio-queues>`."
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:117
msgid "Subprocesses"
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:119
msgid "Utilities to spawn subprocesses and run shell commands."
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:125
msgid "``await`` :func:`create_subprocess_exec`"
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:126
msgid "Create a subprocess."
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:128
msgid "``await`` :func:`create_subprocess_shell`"
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:129
msgid "Run a shell command."
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:134
msgid ":ref:`Executing a shell command <asyncio_example_subprocess_shell>`."
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:136
msgid "See also the :ref:`subprocess APIs <asyncio-subprocess>` documentation."
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:141
msgid "Streams"
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:143
msgid "High-level APIs to work with network IO."
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:149
msgid "``await`` :func:`open_connection`"
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:150
msgid "Establish a TCP connection."
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:152
msgid "``await`` :func:`open_unix_connection`"
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:153
msgid "Establish a Unix socket connection."
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:155
msgid "``await`` :func:`start_server`"
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:156
msgid "Start a TCP server."
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:158
msgid "``await`` :func:`start_unix_server`"
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:159
msgid "Start a Unix socket server."
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:161
msgid ":class:`StreamReader`"
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:162
msgid "High-level async/await object to receive network data."
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:164
msgid ":class:`StreamWriter`"
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:165
msgid "High-level async/await object to send network data."
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:170
msgid ":ref:`Example TCP client <asyncio_example_stream>`."
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:172
msgid "See also the :ref:`streams APIs <asyncio-streams>` documentation."
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:177
msgid "Synchronization"
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:179
msgid "Threading-like synchronization primitives that can be used in Tasks."
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:185
msgid ":class:`Lock`"
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:186
msgid "A mutex lock."
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:188
msgid ":class:`Event`"
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:189
msgid "An event object."
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:191
msgid ":class:`Condition`"
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:192
msgid "A condition object."
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:194
msgid ":class:`Semaphore`"
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:195
msgid "A semaphore."
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:197
msgid ":class:`BoundedSemaphore`"
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:198
msgid "A bounded semaphore."
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:200
msgid ":class:`Barrier`"
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:201
msgid "A barrier object."
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:206
msgid ":ref:`Using asyncio.Event <asyncio_example_sync_event>`."
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:208
msgid ":ref:`Using asyncio.Barrier <asyncio_example_barrier>`."
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:210
msgid ""
"See also the documentation of asyncio :ref:`synchronization primitives "
"<asyncio-sync>`."
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:215
msgid "Exceptions"
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:222
msgid ":exc:`asyncio.CancelledError`"
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:223
msgid "Raised when a Task is cancelled. See also :meth:`Task.cancel`."
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:225
msgid ":exc:`asyncio.BrokenBarrierError`"
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:226
msgid "Raised when a Barrier is broken. See also :meth:`Barrier.wait`."
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:231
msgid ""
":ref:`Handling CancelledError to run code on cancellation request "
"<asyncio_example_task_cancel>`."
msgstr ""

#: ../Doc/library/asyncio-api-index.rst:234
msgid ""
"See also the full list of :ref:`asyncio-specific exceptions <asyncio-"
"exceptions>`."
msgstr ""
